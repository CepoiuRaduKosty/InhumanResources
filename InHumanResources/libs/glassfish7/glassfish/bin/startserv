#!/bin/bash
#
# Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

AS_INSTALL=`dirname "$0"`/../glassfish
case "`uname`" in
  CYGWIN*) AS_INSTALL=`cygpath --windows $AS_INSTALL`
esac
AS_INSTALL_LIB="$AS_INSTALL/lib"
. "${AS_INSTALL}/config/asenv.conf"
JAVA=java
#Depends upon Java from ../config/asenv.conf
if [ ${AS_JAVA} ]; then
    JAVA=${AS_JAVA}/bin/java
fi

start_as_main_process () {
    local COMMAND
    local ASADMIN_JAR="$AS_INSTALL_LIB/client/appserver-cli.jar"

    if [[ "$@" == "--help" ]] || [[ "$@" == "--help=true" ]] || [[ "$@" == "-?" ]]; then
      exec java -jar "$ASADMIN_JAR" start-domain --help
    fi

    # Execute start-domain --dry-run and store the output line by line into an array,
    #   except the first and last line, which aren't part of the command to execute.
    # If it fails, the first item in the array will be FAILED
    COMMAND=()
    local FIRST=y
    local SECOND=y
    local PREV_COM
    while read COM; do
      if [[ "$FIRST" == y ]]; then
        FIRST=n
      elif [[ "$SECOND" == y ]]; then
        SECOND=n
        PREV_COM="$COM"
      else
        COMMAND+=("$PREV_COM");
        PREV_COM="$COM"
      fi
    done < <(java -jar "$ASADMIN_JAR" start-domain --dry-run "$@" 2> /dev/null || echo -e "FAILED\n" )

    # If asadmin command failed (first item is FAILED), we execute it again to show
    #   the output to the user and exit
    if [[ "${COMMAND[@]:0:1}" == FAILED ]]
      then
        exec "$JAVA" -jar "$AS_INSTALL_LIB/client/appserver-cli.jar" start-domain --dry-run "$@"
      else
        # If all OK, execute the command to start GlassFish
        exec "${COMMAND[@]}"
    fi

}

start_as_main_process "$@"

# Alternatively, run the following:
# exec "$JAVA" -jar "$AS_INSTALL_LIB/client/appserver-cli.jar" start-domain --verbose "$@"